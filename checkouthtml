<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Checkout - VL ONLINE SHOP</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f7f5f2;
      color: #333;
      margin: 0;
    }
    header {
      background-color: #1a1a1a;
      color: white;
      padding: 15px 30px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-size: 24px;
      font-weight: bold;
      position: sticky;
      top: 0;
      z-index: 1000;
    }
    header span {
      color: #e0b973;
    }
    .checkout-container {
      display: flex;
      justify-content: space-between;
      margin: 20px;
    }
    .cart-items {
      width: 70%;
      padding: 20px;
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }
    .cart-item {
      display: flex;
      justify-content: space-between;
      padding: 10px;
      border-bottom: 1px solid #ccc;
    }
    .cart-item:last-child {
      border-bottom: none;
    }
    .cart-item img {
      width: 50px;
      height: auto;
      border-radius: 6px;
    }
    .cart-item .item-details {
      flex-grow: 1;
      margin-left: 10px;
    }
    .cart-item .item-details h4 {
      margin: 0;
      color: #1a1a1a;
    }
    .cart-item .item-details p {
      font-size: 14px;
      color: #888;
    }
    .cart-item .quantity {
      display: flex;
      align-items: center;
    }
    .cart-item .quantity input {
      width: 40px;
      padding: 5px;
      text-align: center;
      margin: 0 10px;
      font-size: 16px;
      border-radius: 6px;
      border: 1px solid #ccc;
    }
    .cart-item .quantity button {
      background-color: #e0b973;
      color: white;
      padding: 5px 10px;
      border: none;
      border-radius: 6px;
      cursor: pointer;
    }
    .cart-item .quantity button:hover {
      background-color: #1a1a1a;
    }
    .checkout-summary {
      width: 28%;
      padding: 20px;
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }
    .checkout-summary h3 {
      margin-top: 0;
    }
    .checkout-summary .total {
      font-size: 18px;
      font-weight: bold;
      color: #e0b973;
      margin: 20px 0;
    }
    .checkout-summary .location {
      margin: 10px 0;
    }
    .checkout-summary .location input {
      width: 100%;
      padding: 10px;
      border-radius: 6px;
      border: 1px solid #ccc;
      font-size: 16px;
    }
    .checkout-summary .checkout-button {
      width: 100%;
      background-color: #1a1a1a;
      color: white;
      padding: 10px;
      font-size: 16px;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      transition: background-color 0.3s;
    }
    .checkout-summary .checkout-button:hover {
      background-color: #e0b973;
    }
  </style>
</head>
<body>

  <header>
    <div>üõçÔ∏è <span>VL ONLINE SHOP</span></div>
  </header>

  <div class="checkout-container">
    <div class="cart-items" id="cartItems">
      <!-- Cart items will be displayed here -->
    </div>

    <div class="checkout-summary">
      <h3>Ringkasan Belanja</h3>
      <div class="total" id="totalPrice">Total: Rp 0</div>

      <div class="location">
        <label for="address">Alamat Pengiriman</label>
        <input type="text" id="address" placeholder="Masukkan alamat pengiriman..." onblur="calculateShipping()">
      </div>

      <button class="checkout-button" onclick="goToPayment()">Lanjut ke Pembayaran</button>
    </div>
  </div>

  <script>
    // Dummy product data (from cart)
    const productsInCart = [
      { id: 1, name: 'Produk 1', price: 50000, quantity: 1, image: 'https://via.placeholder.com/250x150' },
      { id: 2, name: 'Produk 2', price: 75000, quantity: 2, image: 'https://via.placeholder.com/250x150' }
    ];

    // Hardcoded center location coordinates (Vistra Delivery)
    const centerLocation = { lat: -1.6409491, lng: 105.771176 };
    const maxFreeShippingDistance = 1; // 1km

    // Function to render cart items
    function renderCartItems() {
      const cartItemsContainer = document.getElementById('cartItems');
      cartItemsContainer.innerHTML = ''; // Clear current cart items

      productsInCart.forEach(product => {
        const cartItemElement = document.createElement('div');
        cartItemElement.classList.add('cart-item');
        cartItemElement.innerHTML = `
          <img src="${product.image}" alt="${product.name}">
          <div class="item-details">
            <h4>${product.name}</h4>
            <p>Harga: Rp ${product.price.toLocaleString('id-ID')}</p>
          </div>
          <div class="quantity">
            <button onclick="updateQuantity(${product.id}, 'decrease')">-</button>
            <input type="number" value="${product.quantity}" min="1" id="quantity-${product.id}" readonly>
            <button onclick="updateQuantity(${product.id}, 'increase')">+</button>
          </div>
        `;
        cartItemsContainer.appendChild(cartItemElement);
      });

      updateTotalPrice();
    }

    // Function to update the quantity of items in the cart
    function updateQuantity(productId, action) {
      const product = productsInCart.find(p => p.id === productId);
      if (action === 'increase') {
        product.quantity++;
      } else if (action === 'decrease' && product.quantity > 1) {
        product.quantity--;
      }
      renderCartItems();
    }

    // Function to calculate total price
    function updateTotalPrice() {
      const total = productsInCart.reduce((sum, product) => sum + product.price * product.quantity, 0);
      document.getElementById('totalPrice').textContent = `Total: Rp ${total.toLocaleString('id-ID')}`;
    }

    // Function to calculate shipping cost
    function calculateShipping() {
      const address = document.getElementById('address').value;
      if (address) {
        const distance = calculateDistance(centerLocation.lat, centerLocation.lng, -1.634944, 105.767547); // Replace with actual geolocation coordinates

        let shippingCost = 5000;
        if (distance > maxFreeShippingDistance) {
          const additionalKm = Math.ceil((distance - maxFreeShippingDistance) / 1);
          shippingCost += additionalKm * 2000;
        }

        const total = productsInCart.reduce((sum, product) => sum + product.price * product.quantity, 0);
        const totalPriceWithShipping = total + shippingCost;
        document.getElementById('totalPrice').textContent = `Total: Rp ${totalPriceWithShipping.toLocaleString('id-ID')} (Ongkir: Rp ${shippingCost.toLocaleString('id-ID')})`;
      }
    }

    // Function to calculate distance between two coordinates (Haversine formula)
    function calculateDistance(lat1, lon1, lat2, lon2) {
      const R = 6371; // Earth radius in km
      const dLat = (lat2 - lat1) * Math.PI / 180;
      const dLon = (lon2 - lon1) * Math.PI / 180;
      const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
                Math.sin(dLon / 2) * Math.sin(dLon / 2);
      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
      return R * c; // Distance in km
    }

    // Function to navigate to payment page
    function goToPayment() {
      alert("Navigating to payment page...");
      // You can pass cart and address data to payment page here if necessary
    }

    renderCartItems(); // Initial render
  </script>

</body>
</html>
